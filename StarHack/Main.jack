class Main {

    static StarHackGame game;

    function void main() {
        var String cmd;

        do Constants.init();
        do Strings.init();
        do Sprites.init();
        do Screens.init();
        do GameGraphics.init();
        do Random.seed();

        while (true) {

            // attract loop
            do GameGraphics.drawImageToScreen(Screens.titleScreen());
            do InputDialog.setPosition(19, 25);
            do InputDialog.waitForKey(Constants.pressKey());
            do GameGraphics.wipeScreen();

            // game start
            let game = StarHackGame.new();

            // intro
            do TextGraphics.drawTextAligned(Constants.msg00(), 2, 3, 0);
            do TextGraphics.drawTextAligned(Constants.msg01(), 4, 6, 0);
            do TextGraphics.drawTextAligned(Constants.msg02(), 5, 6, 0);
            do TextGraphics.drawTextAligned(Constants.msg03(), 7, 6, 0);
            do TextGraphics.drawLabelValue(Constants.daysLeft(), game.daysLeft(), 10, 32, 0);
            do InputDialog.setPosition(19, 25);
            do InputDialog.waitForKey(Constants.pressKey());
            do GameGraphics.wipeScreen();

            // main game loop 
            do GameGraphics.drawImageToScreen(Screens.gameScreen());
            do Main.drawSectorMap(game, game.playerShip());
            do Main.drawGameStatus(game, game.playerShip());
            do InputDialog.setPosition(19, 32);
            while (game.isRunning()) {
                let cmd = InputDialog.readInput(Constants.cmd());
                do game.execute(cmd);
                do cmd.dispose();
                do Main.drawSectorMap(game, game.playerShip());
                do Main.drawGameStatus(game, game.playerShip());
            }
            do game.dispose();

        }
        return;
    }

    function void drawSectorMap(StarHackGame game, PlayerShip playerShip) {
        do Sprites.star(1, 1);
        do Sprites.ship(2, 2);
        do Sprites.anomaly(3, 3);
        do Sprites.orbital(6, 6);
        do Sprites.planet(7, 7);
        do TextGraphics.drawTextAligned(Strings.sectorName(playerShip.sectorIndex()), 21, 16, 1);
        do TextGraphics.drawTextAligned(Constants.conditionRed(), 22, 16, 1);
        return;        
    }

    function void drawGameStatus(StarHackGame game, PlayerShip playerShip) {
        do TextGraphics.drawTextAligned(Constants.missionStatus(), 3, 29, 0);
        do TextGraphics.drawTextAligned(Constants.divider(), 4, 29, 0);
        do TextGraphics.drawLabelValue(Constants.daysLeft(), game.daysLeft(), 5, 29, 0);
        do TextGraphics.drawLabelValue(Constants.anomalies(), game.anomaliesLeft(), 6, 29, 0);
        do TextGraphics.drawLabelValue(Constants.habitats(), game.habitatsLeft(), 7, 29, 0);
        do TextGraphics.drawTextAligned(Constants.shipStatus(), 3, 47, 0);
        do TextGraphics.drawTextAligned(Constants.divider(), 4, 47, 0);
        do TextGraphics.drawLabelValue(Constants.weapons(), playerShip.weaponsStatus(), 5, 47, 0);
        do TextGraphics.drawLabelValue(Constants.engines(), playerShip.engineEfficiency(), 6, 47, 0);
        do TextGraphics.drawLabelValue(Constants.hull(), playerShip.hullIntegrity(), 7, 47, 0);
        do TextGraphics.drawLabelValue(Constants.power(), playerShip.powerReserve(), 8, 47, 0);
        do TextGraphics.drawLabelValue(Constants.shields(), playerShip.shieldLevel(), 9, 47, 0);
        do TextGraphics.drawLabelValue(Constants.missiles(), playerShip.missileSupply(), 10, 47, 0);
        do TextGraphics.drawLabelValue(Constants.drones(), playerShip.dronePopulation(), 11, 47, 0);
        return;
    }


    

}