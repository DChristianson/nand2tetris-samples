class Anomaly {

    field int sectorIndex;
    field int subsectorIndex;
    field int strength;
    field int cooldown;

    method void init(int sector, int subsector, int str) {
        let sectorIndex = sector;
        let subsectorIndex = subsector;
        let strength = str;
        let cooldown = 1;
        return;
    }

    method int sectorIndex() {
        return sectorIndex;
    }

    method int subsectorIndex() {
        return subsectorIndex;
    }

    method boolean isDestroyed() {
        return strength < 1;
    }

    method void hit(int p) {
        let strength = strength - p;
        return;
    }

    method void update() {
        var int i;
        var PlayerShip playerShip;
        var Habitat habitat;
        if (cooldown > 0) {
            let cooldown = cooldown - 1;
            return;
        }
        let playerShip = StarHackGame.playerShip();
        if (sectorIndex = playerShip.sectorIndex()) {
            do StarHackGame.anomalyFireUpon(sectorIndex, playerShip.subsectorIndex(), 25, true);
            let cooldown = cooldown + 1;
            return;
        }
        let habitat = StarHackGame.findHabitat(sectorIndex, subsectorIndex, 20);
        if (habitat > 0) {
            do StarHackGame.anomalyFireUpon(sectorIndex, habitat.subsectorIndex(), 25, false);
            let cooldown = cooldown + 2;
        }
        return;
    }

}